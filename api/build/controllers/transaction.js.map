{"version":3,"sources":["../../v1/controllers/transaction.js"],"names":["TransactionController","debitTransaction","req","res","accountNumber","params","transactionData","body","jwt","verify","token","err","authorizedData","sendStatus","debitedData","TransactionService","json","status","data","creditTransaction","creditedData"],"mappings":";;;;;;;AACA;;AACA;;;;AAFA;AAIA,IAAMA,qBAAqB,GAAG;AAC5BC,EAAAA,gBAD4B,4BACXC,GADW,EACNC,GADM,EACD;AAAA,QACjBC,aADiB,GACCF,GAAG,CAACG,MADL,CACjBD,aADiB;AAEzB,QAAME,eAAe,GAAGJ,GAAG,CAACK,IAA5B,CAFyB,CAGzB;;AACAC,6BAAIC,MAAJ,CAAWP,GAAG,CAACQ,KAAf,EAAsB,MAAtB,EAA8B,UAACC,GAAD,EAAMC,cAAN,EAAyB;AACrD,UAAID,GAAJ,EAAS;AACPR,QAAAA,GAAG,CAACU,UAAJ,CAAe,GAAf;AACD,OAFD,MAEO;AACL,YAAMC,WAAW,GAAGC,wBACjBd,gBADiB,CACAG,aADA,EACeQ,cADf,EAC+BN,eAD/B,CAApB;;AAEA,eAAOH,GAAG,CAACa,IAAJ,CAAS;AACdC,UAAAA,MAAM,EAAE,SADM;AAEdC,UAAAA,IAAI,EAAEJ;AAFQ,SAAT,EAGJG,MAHI,CAGG,GAHH,CAAP;AAID;AACF,KAXD;AAYD,GAjB2B;AAkB5BE,EAAAA,iBAlB4B,6BAkBVjB,GAlBU,EAkBLC,GAlBK,EAkBA;AAAA,QAClBC,aADkB,GACAF,GAAG,CAACG,MADJ,CAClBD,aADkB;AAE1B,QAAME,eAAe,GAAGJ,GAAG,CAACK,IAA5B,CAF0B,CAG1B;;AACAC,6BAAIC,MAAJ,CAAWP,GAAG,CAACQ,KAAf,EAAsB,MAAtB,EAA8B,UAACC,GAAD,EAAMC,cAAN,EAAyB;AACrD,UAAID,GAAJ,EAAS;AACPR,QAAAA,GAAG,CAACU,UAAJ,CAAe,GAAf;AACD,OAFD,MAEO;AACL,YAAMO,YAAY,GAAGL,wBAClBI,iBADkB,CACAf,aADA,EACeQ,cADf,EAC+BN,eAD/B,CAArB;;AAEA,eAAOH,GAAG,CAACa,IAAJ,CAAS;AACdC,UAAAA,MAAM,EAAE,SADM;AAEdC,UAAAA,IAAI,EAAEE;AAFQ,SAAT,EAGJH,MAHI,CAGG,GAHH,CAAP;AAID;AACF,KAXD;AAYD;AAlC2B,CAA9B;eAqCejB,qB","sourcesContent":["/* eslint-disable consistent-return */\nimport jwt from 'jsonwebtoken';\nimport TransactionService from '../services/transaction';\n\nconst TransactionController = {\n  debitTransaction(req, res) {\n    const { accountNumber } = req.params;\n    const transactionData = req.body;\n    // verify jwt token\n    jwt.verify(req.token, '5634', (err, authorizedData) => {\n      if (err) {\n        res.sendStatus(403);\n      } else {\n        const debitedData = TransactionService\n          .debitTransaction(accountNumber, authorizedData, transactionData);\n        return res.json({\n          status: 'success',\n          data: debitedData,\n        }).status(201);\n      }\n    });\n  },\n  creditTransaction(req, res) {\n    const { accountNumber } = req.params;\n    const transactionData = req.body;\n    // verify jwt token\n    jwt.verify(req.token, '5634', (err, authorizedData) => {\n      if (err) {\n        res.sendStatus(403);\n      } else {\n        const creditedData = TransactionService\n          .creditTransaction(accountNumber, authorizedData, transactionData);\n        return res.json({\n          status: 'success',\n          data: creditedData,\n        }).status(201);\n      }\n    });\n  },\n};\n\nexport default TransactionController;\n"],"file":"transaction.js"}