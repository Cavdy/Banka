{"version":3,"sources":["../../v1/controllers/createAccount.js"],"names":["CreateAccountController","createAccount","req","res","accountData","body","jwt","verify","token","err","authorizedData","json","status","data","createdAccount","CreateAccountService","patchAccount","accountNumber","params","accountStatus","sendStatus","updatedAccount","deleteAccount"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,uBAAuB,GAAG;AAC9BC,EAAAA,aAD8B,yBAChBC,GADgB,EACXC,GADW,EACN;AACtB,QAAMC,WAAW,GAAGF,GAAG,CAACG,IAAxB,CADsB,CAEtB;;AACAC,6BAAIC,MAAJ,CAAWL,GAAG,CAACM,KAAf,EAAsB,MAAtB,EAA8B,UAACC,GAAD,EAAMC,cAAN,EAAyB;AACrD,UAAID,GAAJ,EAAS;AACP,eAAON,GAAG,CAACQ,IAAJ,CAAS;AACdC,UAAAA,MAAM,EAAE,GADM;AAEdC,UAAAA,IAAI,EAAE;AAFQ,SAAT,EAGJD,MAHI,CAGG,GAHH,CAAP;AAID;;AACD,UAAME,cAAc,GAAGC,0BAAqBd,aAArB,CAAmCG,WAAnC,EAAgDM,cAAhD,CAAvB;;AACA,aAAOP,GAAG,CAACQ,IAAJ,CAAS;AACdC,QAAAA,MAAM,EAAE,SADM;AAEdC,QAAAA,IAAI,EAAEC;AAFQ,OAAT,EAGJF,MAHI,CAGG,GAHH,CAAP;AAID,KAZD;AAaD,GAjB6B;AAkB9B;AACAI,EAAAA,YAnB8B,wBAmBjBd,GAnBiB,EAmBZC,GAnBY,EAmBP;AAAA,QACbc,aADa,GACKf,GAAG,CAACgB,MADT,CACbD,aADa;AAErB,QAAME,aAAa,GAAGjB,GAAG,CAACG,IAA1B;;AACAC,6BAAIC,MAAJ,CAAWL,GAAG,CAACM,KAAf,EAAsB,MAAtB,EAA8B,UAACC,GAAD,EAAMC,cAAN,EAAyB;AACrD,UAAID,GAAJ,EAAS;AACPN,QAAAA,GAAG,CAACiB,UAAJ,CAAe,GAAf;AACD,OAFD,MAEO;AACL,YAAMC,cAAc,GAAGN,0BAAqBC,YAArB,CAAkCC,aAAlC,EAAiDE,aAAjD,EAAgET,cAAhE,CAAvB;;AACA,eAAOP,GAAG,CAACQ,IAAJ,CAAS;AACdC,UAAAA,MAAM,EAAE,SADM;AAEdC,UAAAA,IAAI,EAAEQ;AAFQ,SAAT,EAGJT,MAHI,CAGG,GAHH,CAAP;AAID;AACF,KAVD;AAWD,GAjC6B;AAkC9B;AACAU,EAAAA,aAnC8B,yBAmChBpB,GAnCgB,EAmCXC,GAnCW,EAmCN;AAAA,QACdc,aADc,GACIf,GAAG,CAACgB,MADR,CACdD,aADc;;AAEtBX,6BAAIC,MAAJ,CAAWL,GAAG,CAACM,KAAf,EAAsB,MAAtB,EAA8B,UAACC,GAAD,EAAMC,cAAN,EAAyB;AACrD,UAAID,GAAJ,EAAS;AACPN,QAAAA,GAAG,CAACiB,UAAJ,CAAe,GAAf;AACD,OAFD,MAEO;AACL,YAAME,aAAa,GAAGP,0BAAqBO,aAArB,CAAmCL,aAAnC,EAAkDP,cAAlD,CAAtB;;AACA,eAAOP,GAAG,CAACQ,IAAJ,CAAS;AACdC,UAAAA,MAAM,EAAE,SADM;AAEdC,UAAAA,IAAI,EAAES;AAFQ,SAAT,EAGJV,MAHI,CAGG,GAHH,CAAP;AAID;AACF,KAVD;AAWD;AAhD6B,CAAhC;eAmDeZ,uB","sourcesContent":["import jwt from 'jsonwebtoken';\nimport CreateAccountService from '../services/createAccount';\n\nconst CreateAccountController = {\n  createAccount(req, res) {\n    const accountData = req.body;\n    // verify jwt token\n    jwt.verify(req.token, '5634', (err, authorizedData) => {\n      if (err) {\n        return res.json({\n          status: 403,\n          data: 'You must be logged in to create an account',\n        }).status(403);\n      }\n      const createdAccount = CreateAccountService.createAccount(accountData, authorizedData);\n      return res.json({\n        status: 'success',\n        data: createdAccount,\n      }).status(201);\n    });\n  },\n  // patchAccount\n  patchAccount(req, res) {\n    const { accountNumber } = req.params;\n    const accountStatus = req.body;\n    jwt.verify(req.token, '5634', (err, authorizedData) => {\n      if (err) {\n        res.sendStatus(403);\n      } else {\n        const updatedAccount = CreateAccountService.patchAccount(accountNumber, accountStatus, authorizedData);\n        return res.json({\n          status: 'success',\n          data: updatedAccount,\n        }).status(201);\n      }\n    });\n  },\n  // deleteAccount\n  deleteAccount(req, res) {\n    const { accountNumber } = req.params;\n    jwt.verify(req.token, '5634', (err, authorizedData) => {\n      if (err) {\n        res.sendStatus(403);\n      } else {\n        const deleteAccount = CreateAccountService.deleteAccount(accountNumber, authorizedData);\n        return res.json({\n          status: 'success',\n          data: deleteAccount,\n        }).status(200);\n      }\n    });\n  },\n};\n\nexport default CreateAccountController;\n"],"file":"createAccount.js"}