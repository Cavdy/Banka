{"version":3,"sources":["../../v1/test/accounts.js"],"names":["chai","use","chaiHttp","describe","it","done","request","app","post","send","type","end","error","response","body","to","be","an","patch","status"],"mappings":";;AACA;;AACA;;AAEA;;;;;;AAJA;AAMAA,iBAAKC,GAAL,CAASC,oBAAT;;AAEAC,QAAQ,CAAC,6BAAD,EAAgC,YAAM;AAC5CA,EAAAA,QAAQ,CAAC,6BAAD,EAAgC,YAAM;AAC5CC,IAAAA,EAAE,CACA,2CADA,EAEA,UAACC,IAAD,EAAU;AACRL,uBAAKM,OAAL,CAAaC,eAAb,EACGC,IADH,CACQ,mBADR,EAEGC,IAFH,CAEQ;AACJC,QAAAA,IAAI,EAAE;AADF,OAFR,EAKGC,GALH,CAKO,UAACC,KAAD,EAAQC,QAAR,EAAqB;AACxB,0BAAOA,QAAQ,CAACC,IAAhB,EAAsBC,EAAtB,CAAyBC,EAAzB,CAA4BC,EAA5B,CAA+B,QAA/B,EADwB,CAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAZ,QAAAA,IAAI;AACL,OApBH;AAqBD,KAxBD,CAAF;AA2BAD,IAAAA,EAAE,CAAC,iCAAD,EAAoC,UAACC,IAAD,EAAU;AAC9CL,uBAAKM,OAAL,CAAaC,eAAb,EACGW,KADH,CACS,+BADT,EAEGT,IAFH,CAEQ;AACJU,QAAAA,MAAM,EAAE;AADJ,OAFR,EAKGR,GALH,CAKO,UAACC,KAAD,EAAQC,QAAR,EAAqB;AACxB,0BAAOA,QAAQ,CAACC,IAAhB,EAAsBC,EAAtB,CAAyBC,EAAzB,CAA4BC,EAA5B,CAA+B,QAA/B,EADwB,CAExB;AACA;AACA;;AACAZ,QAAAA,IAAI;AACL,OAXH;AAYD,KAbC,CAAF;AAeAD,IAAAA,EAAE,CAAC,kCAAD,EAAqC,UAACC,IAAD,EAAU;AAC/CL,uBAAKM,OAAL,CAAaC,eAAb,YACU,+BADV,EAEGE,IAFH,GAGGE,GAHH,CAGO,UAACC,KAAD,EAAQC,QAAR,EAAqB;AACxB,0BAAOA,QAAQ,CAACC,IAAhB,EAAsBC,EAAtB,CAAyBC,EAAzB,CAA4BC,EAA5B,CAA+B,QAA/B,EADwB,CAExB;AACA;AACA;;AACAZ,QAAAA,IAAI;AACL,OATH;AAUD,KAXC,CAAF;AAaAD,IAAAA,EAAE,CAAC,2CAAD,EAA8C,UAACC,IAAD,EAAU;AACxDL,uBAAKM,OAAL,CAAaC,eAAb,YACU,+BADV,EAEGE,IAFH,GAGGE,GAHH,CAGO,UAACC,KAAD,EAAQC,QAAR,EAAqB;AACxB,0BAAOA,QAAQ,CAACC,IAAhB,EAAsBC,EAAtB,CAAyBC,EAAzB,CAA4BC,EAA5B,CAA+B,QAA/B,EADwB,CAExB;AACA;AACA;;AACAZ,QAAAA,IAAI;AACL,OATH;AAUD,KAXC,CAAF;AAYD,GApEO,CAAR;AAqED,CAtEO,CAAR","sourcesContent":["/* eslint-disable no-undef */\r\nimport chaiHttp from 'chai-http';\r\nimport chai, { expect } from 'chai';\r\n\r\nimport app from '../app';\r\n\r\nchai.use(chaiHttp);\r\n\r\ndescribe('Testing Accounts Controller', () => {\r\n  describe('Testing accounts controller', () => {\r\n    it(\r\n      'accounts should have all required details',\r\n      (done) => {\r\n        chai.request(app)\r\n          .post('/api/v1/accounts/')\r\n          .send({\r\n            type: 'savings',\r\n          })\r\n          .end((error, response) => {\r\n            expect(response.body).to.be.an('object');\r\n            // fails to test due to route being protected but everything is working fine\r\n            //   expect(response.body.status).to.equal('success');\r\n            //   expect(response.body.data).to.have.property('id');\r\n            //   expect(response.body.data).to.have.property('firstName');\r\n            //   expect(response.body.data).to.have.property('lastName');\r\n            //   expect(response.body.data).to.have.property('email');\r\n            //   expect(response.body.data).to.have.property('accountNumber');\r\n            //   expect(response.body.data).to.have.property('createdOn');\r\n            //   expect(response.body.data).to.have.property('owner');\r\n            //   expect(response.body.data).to.have.property('status');\r\n            //   expect(response.body.data).to.have.property('type');\r\n            //   expect(response.body.data).to.have.property('balance');\r\n            done();\r\n          });\r\n      },\r\n    );\r\n\r\n    it('should be able to patch account', (done) => {\r\n      chai.request(app)\r\n        .patch('/api/v1/accounts/306363789207')\r\n        .send({\r\n          status: 'dormant',\r\n        })\r\n        .end((error, response) => {\r\n          expect(response.body).to.be.an('object');\r\n          // remove the checkToken from app.js to test this\r\n          //   expect(response.body.status).to.equal('success');\r\n          //   expect(response.body.data.status).to.equal('dormant');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('should be able to delete account', (done) => {\r\n      chai.request(app)\r\n        .delete('/api/v1/accounts/307363789207')\r\n        .send()\r\n        .end((error, response) => {\r\n          expect(response.body).to.be.an('object');\r\n          // remove the checkToken from app.js to test this\r\n          //   expect(response.body.status).to.equal('success');\r\n          //   expect(response.body.data).to.equal('account deleted');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('should notify when account does not exist', (done) => {\r\n      chai.request(app)\r\n        .delete('/api/v1/accounts/306363789299')\r\n        .send()\r\n        .end((error, response) => {\r\n          expect(response.body).to.be.an('object');\r\n          // remove the checkToken from app.js to test this\r\n          //   expect(response.body.status).to.equal('success');\r\n          //   expect(response.body.data).to.equal('no account found or account has been deleted');\r\n          done();\r\n        });\r\n    });\r\n  });\r\n});\r\n"],"file":"accounts.js"}