{"version":3,"sources":["../../v1/test/signup.js"],"names":["chai","use","chaiHttp","describe","signupUrl","it","done","request","app","post","send","firstName","lastName","email","password","end","error","response","body","to","be","an","have","status","data","a","property","equal"],"mappings":"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","sourcesContent":["/* eslint-disable no-undef */\nimport chaiHttp from 'chai-http';\nimport chai, { expect } from 'chai';\n\nimport app from '../app';\n\nchai.use(chaiHttp);\n\ndescribe('Testing User Controller', () => {\n  describe('Testing signup controller', () => {\n    const signupUrl = '/api/auth/signup';\n    it(\n      'should register a new user when all the parameters are given',\n      (done) => {\n        chai.request(app)\n          .post(signupUrl)\n          .send({\n            firstName: 'cavdy',\n            lastName: 'isaiah',\n            email: 'banka4@banka4.com',\n            password: 'passworD4@',\n          })\n\n          .end((error, response) => {\n            expect(response.body).to.be.an('object');\n            expect(response).to.have.status(200);\n            expect(response.body.data).to.be.a('object');\n            expect(response.body.data).to.have.property('id');\n            expect(response.body.data).to.have.property('firstName');\n            expect(response.body.data).to.have.property('lastName');\n            expect(response.body.data).to.have.property('email');\n            done();\n          });\n      },\n    );\n\n    it('should not register a user when the email is missing', (done) => {\n      chai.request(app)\n        .post(signupUrl)\n        .send({\n          firstName: 'cavdy',\n          lastName: 'isaiah',\n          password: 'passworD4@',\n        })\n        .end((error, response) => {\n          expect(response.body).to.be.an('object');\n          expect(response.body.status).to.equal('success');\n          expect(response.body.data[0]).to.equal('Email is required');\n          done();\n        });\n    });\n\n    it('should not register a user when the email already exist', (done) => {\n      chai.request(app)\n        .post(signupUrl)\n        .send({\n          firstName: 'cavdy',\n          lastName: 'isaiah',\n          email: 'banka2@banka.com',\n          password: 'passworD4@',\n        })\n        .end((error, response) => {\n          expect(response.body).to.be.an('object');\n          expect(response.body.status).to.equal('success');\n          expect(response.body.data[0]).to.equal('email already exist');\n          done();\n        });\n    });\n\n    it('should not register a user when the first name is missing', (done) => {\n      chai.request(app)\n        .post(signupUrl)\n        .send({\n          lastName: 'isaiah',\n          email: 'banka4@banka.com',\n          password: 'passworD4@',\n        })\n        .end((error, response) => {\n          expect(response.body).to.be.an('object');\n          expect(response.body.status).to.equal('success');\n          expect(response.body.data[0]).to.equal('Firstname required');\n          done();\n        });\n    });\n\n    it('should not register a user when the last name is missing', (done) => {\n      chai.request(app)\n        .post(signupUrl)\n        .send({\n          firstName: 'cavdy',\n          email: 'banka4@banka.com',\n          password: 'passworD4@',\n        })\n        .end((error, response) => {\n          expect(response.body).to.be.an('object');\n          expect(response.body.status).to.equal('success');\n          expect(response.body.data[0]).to.equal('Lastname required');\n          done();\n        });\n    });\n\n    it('should not register a user when the password is missing', (done) => {\n      chai.request(app)\n        .post(signupUrl)\n        .send({\n          firstName: 'cavdy',\n          lastName: 'isaiah',\n          email: 'banka4@banka.com',\n        })\n        .end((error, response) => {\n          expect(response.body).to.be.an('object');\n          expect(response.body.status).to.equal('success');\n          expect(response.body.data[0]).to.equal('Password should contain atleast 8 characters, 1 uppercase letter, 1 lowercase letter, 1 number and 1 symbol or character');\n          done();\n        });\n    });\n\n    it('should not register a user when the password do not meet requirement', (done) => {\n      chai.request(app)\n        .post(signupUrl)\n        .send({\n          firstName: 'cavdy',\n          lastName: 'isaiah',\n          email: 'banka4@banka.com',\n          password: 'passworD4',\n        })\n        .end((error, response) => {\n          expect(response.body).to.be.an('object');\n          expect(response.body.status).to.equal('success');\n          expect(response.body.data[0]).to.equal('Password should contain atleast 8 characters, 1 uppercase letter, 1 lowercase letter, 1 number and 1 symbol or character');\n          done();\n        });\n    });\n  });\n});\n"],"file":"signup.js"}