{"version":3,"sources":["../../v1/services/register.js"],"names":["users","usersData","RegisterService","registerUser","userData","firstnameAndLastnameRegex","emailRegex","passwordRegex","returnValue","emailPassed","firstnamePassed","lastnamePassed","passwordPassed","usersLength","length","newId","id","test","email","checkEmail","i","push","firstName","lastName","password"],"mappings":";;;;;;;AACA;;;;AADA;IAGQA,K,GAAUC,iB,CAAVD,K;AAER,IAAME,eAAe,GAAG;AACtBC,EAAAA,YADsB,wBACTC,QADS,EACC;AACrB,QAAMC,yBAAyB,GAAG,mBAAlC;AACA,QAAMC,UAAU,GAAG,6DAAnB;AACA,QAAMC,aAAa,GAAG,gEAAtB;AACA,QAAIC,WAAW,GAAG,EAAlB,CAJqB,CAKrB;;AACA,QAAIC,WAAJ,EAAiBC,eAAjB,EAAkCC,cAAlC,EAAkDC,cAAlD;AAEA,QAAMC,WAAW,GAAGb,KAAK,CAACc,MAA1B;AACA,QAAMC,KAAK,GAAGF,WAAW,GAAG,CAA5B;AACAT,IAAAA,QAAQ,CAACY,EAAT,GAAcD,KAAd,CAVqB,CAYrB;;AACA,QAAIT,UAAU,CAACW,IAAX,CAAgBb,QAAQ,CAACc,KAAzB,CAAJ,EAAqC;AACnC,UAAIC,UAAU,GAAG,KAAjB,CADmC,CAGnC;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIP,WAAW,GAAG,CAAnC,EAAsCO,CAAC,EAAvC,EAA2C;AACzC,YAAIpB,KAAK,CAACoB,CAAD,CAAL,CAASF,KAAT,KAAmBd,QAAQ,CAACc,KAAhC,EAAuC;AACrCC,UAAAA,UAAU,GAAG,IAAb;AACD;AACF,OARkC,CAUnC;;;AACA,UAAIA,UAAJ,EAAgB;AACdX,QAAAA,WAAW,CAACa,IAAZ,CAAiB,qBAAjB;AACD,OAFD,MAEO;AACLZ,QAAAA,WAAW,GAAG,IAAd;AACD;AACF,KAhBD,MAgBO;AACLD,MAAAA,WAAW,CAACa,IAAZ,CAAiB,mBAAjB;AACD;;AAED,QAAIhB,yBAAyB,CAACY,IAA1B,CAA+Bb,QAAQ,CAACkB,SAAxC,KAAsD,OAAOlB,QAAQ,CAACkB,SAAhB,KAA8B,WAApF,IAAmGlB,QAAQ,CAACkB,SAAT,KAAuB,IAA9H,EAAoI;AAClIZ,MAAAA,eAAe,GAAG,IAAlB;AACD,KAFD,MAEO;AACLF,MAAAA,WAAW,CAACa,IAAZ,CAAiB,oBAAjB;AACD;;AACD,QAAIhB,yBAAyB,CAACY,IAA1B,CAA+Bb,QAAQ,CAACmB,QAAxC,KAAqD,OAAOnB,QAAQ,CAACmB,QAAhB,KAA6B,WAAlF,IAAiGnB,QAAQ,CAACmB,QAAT,KAAsB,IAA3H,EAAiI;AAC/HZ,MAAAA,cAAc,GAAG,IAAjB;AACD,KAFD,MAEO;AACLH,MAAAA,WAAW,CAACa,IAAZ,CAAiB,mBAAjB;AACD;;AACD,QAAId,aAAa,CAACU,IAAd,CAAmBb,QAAQ,CAACoB,QAA5B,KAAyC,OAAOpB,QAAQ,CAACoB,QAAhB,KAA6B,WAAtE,IAAqFpB,QAAQ,CAACoB,QAAT,KAAsB,IAA/G,EAAqH;AACnHZ,MAAAA,cAAc,GAAG,IAAjB;AACD,KAFD,MAEO;AACLJ,MAAAA,WAAW,CAACa,IAAZ,CAAiB,0HAAjB;AACD,KA/CoB,CAiDrB;;;AACA,QAAIZ,WAAW,KAAK,IAAhB,IAAwBC,eAAe,KAAK,IAA5C,IAAoDC,cAAc,KAAK,IAAvE,IAA+EC,cAAc,KAAK,IAAtG,EAA4G;AAC1GZ,MAAAA,KAAK,CAACqB,IAAN,CAAWjB,QAAX;AACAI,MAAAA,WAAW,GAAGJ,QAAd;AACD;;AACD,WAAOI,WAAP;AACD;AAxDqB,CAAxB;eA2DeN,e","sourcesContent":["/* eslint-disable no-param-reassign */\r\nimport usersData from '../dummyJson/users';\r\n\r\nconst { users } = usersData;\r\n\r\nconst RegisterService = {\r\n  registerUser(userData) {\r\n    const firstnameAndLastnameRegex = /^[a-zA-Z ]{2,15}$/;\r\n    const emailRegex = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,10})$/;\r\n    const passwordRegex = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/;\r\n    let returnValue = [];\r\n    // eslint-disable-next-line one-var\r\n    let emailPassed, firstnamePassed, lastnamePassed, passwordPassed;\r\n\r\n    const usersLength = users.length;\r\n    const newId = usersLength + 1;\r\n    userData.id = newId;\r\n\r\n    // Check if email is valid\r\n    if (emailRegex.test(userData.email)) {\r\n      let checkEmail = false;\r\n\r\n      // check if email is exist\r\n      for (let i = 0; i <= usersLength - 1; i++) {\r\n        if (users[i].email === userData.email) {\r\n          checkEmail = true;\r\n        }\r\n      }\r\n\r\n      // gives output\r\n      if (checkEmail) {\r\n        returnValue.push('email already exist');\r\n      } else {\r\n        emailPassed = true;\r\n      }\r\n    } else {\r\n      returnValue.push('Email is required');\r\n    }\r\n\r\n    if (firstnameAndLastnameRegex.test(userData.firstName) && typeof userData.firstName !== 'undefined' && userData.firstName !== null) {\r\n      firstnamePassed = true;\r\n    } else {\r\n      returnValue.push('Firstname required');\r\n    }\r\n    if (firstnameAndLastnameRegex.test(userData.lastName) && typeof userData.lastName !== 'undefined' && userData.lastName !== null) {\r\n      lastnamePassed = true;\r\n    } else {\r\n      returnValue.push('Lastname required');\r\n    }\r\n    if (passwordRegex.test(userData.password) && typeof userData.password !== 'undefined' && userData.password !== null) {\r\n      passwordPassed = true;\r\n    } else {\r\n      returnValue.push('Password should contain atleast 8 characters, 1 uppercase letter, 1 lowercase letter, 1 number and 1 symbol or character');\r\n    }\r\n\r\n    // eslint-disable-next-line max-len\r\n    if (emailPassed === true && firstnamePassed === true && lastnamePassed === true && passwordPassed === true) {\r\n      users.push(userData);\r\n      returnValue = userData;\r\n    }\r\n    return returnValue;\r\n  },\r\n};\r\n\r\nexport default RegisterService;\r\n"],"file":"register.js"}