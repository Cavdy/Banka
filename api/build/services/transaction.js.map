{"version":3,"sources":["../../v1/services/transaction.js"],"names":["accounts","accountsData","transactions","transactionsData","TransactionService","debitTransaction","accountNumber","loggedInUser","transactionData","loggedUser","type","i","length","date","Date","createdOn","getDate","getMonth","getFullYear","transactionLength","newId","id","cashier","amount","oldBalance","balance","newBalance","push","creditTransaction"],"mappings":"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","sourcesContent":["/* eslint-disable no-param-reassign */\r\nimport transactionsData from '../dummyJson/transactions';\r\nimport accountsData from '../dummyJson/accounts';\r\n\r\nconst { accounts } = accountsData;\r\n\r\nconst { transactions } = transactionsData;\r\n\r\nconst TransactionService = {\r\n  debitTransaction(accountNumber, loggedInUser, transactionData) {\r\n    if (loggedInUser.loggedUser.type === 'staff') {\r\n      // eslint-disable-next-line no-plusplus\r\n      for (let i = 0; i <= accounts.length - 1; i++) {\r\n        // eslint-disable-next-line eqeqeq\r\n        if (accounts[i].accountNumber == accountNumber) {\r\n          const date = new Date();\r\n          const createdOn = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\r\n          const transactionLength = transactions.length;\r\n          const newId = transactionLength + 1;\r\n          transactionData.id = newId;\r\n          transactionData.createdOn = createdOn;\r\n          transactionData.type = 'debit';\r\n          transactionData.accountNumber = accountNumber;\r\n          transactionData.cashier = loggedInUser.loggedUser.id;\r\n          transactionData.amount = transactionData.amount;\r\n          transactionData.oldBalance = accounts[i].balance;\r\n          const newBalance = accounts[i].balance - transactionData.amount;\r\n          transactionData.newBalance = newBalance;\r\n          transactions.push(transactionData);\r\n          return transactionData;\r\n        }\r\n      }\r\n    }\r\n    return 'you must be a staff to perform this transaction';\r\n  },\r\n  creditTransaction(accountNumber, loggedInUser, transactionData) {\r\n    if (loggedInUser.loggedUser.type === 'staff') {\r\n      // eslint-disable-next-line no-plusplus\r\n      for (let i = 0; i <= accounts.length - 1; i++) {\r\n        // eslint-disable-next-line eqeqeq\r\n        if (accounts[i].accountNumber == accountNumber) {\r\n          const date = new Date();\r\n          const createdOn = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\r\n          const transactionLength = transactions.length;\r\n          const newId = transactionLength + 1;\r\n          transactionData.id = newId;\r\n          transactionData.createdOn = createdOn;\r\n          transactionData.type = 'credit';\r\n          transactionData.accountNumber = accountNumber;\r\n          transactionData.cashier = loggedInUser.loggedUser.id;\r\n          transactionData.amount = transactionData.amount;\r\n          transactionData.oldBalance = accounts[i].balance;\r\n          const newBalance = accounts[i].balance + transactionData.amount;\r\n          transactionData.newBalance = newBalance;\r\n          transactions.push(transactionData);\r\n          return transactionData;\r\n        }\r\n      }\r\n    }\r\n    return 'you must be a staff to perform this transaction';\r\n  },\r\n};\r\n\r\nexport default TransactionService;\r\n"],"file":"transaction.js"}