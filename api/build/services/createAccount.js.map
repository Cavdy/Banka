{"version":3,"sources":["../../v1/services/createAccount.js"],"names":["accounts","accountsData","CreateAccountService","createAccount","accountData","userData","accountsLength","length","newId","accountNumberGenerator","Math","floor","random","date","Date","createdOn","getDate","getMonth","getFullYear","owner","loggedUser","id","firstName","lastName","email","balance","status","accountNumber","push","patchAccount","accountUpdate","account","i","deleteAccount","splice"],"mappings":"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","sourcesContent":["/* eslint-disable no-param-reassign */\r\nimport accountsData from '../dummyJson/accounts';\r\n\r\nconst { accounts } = accountsData;\r\n\r\nconst CreateAccountService = {\r\n  createAccount(accountData, userData) {\r\n    const accountsLength = accounts.length;\r\n    const newId = accountsLength + 1;\r\n    const accountNumberGenerator = Math.floor(Math.random() * 1000000000) + 3000000000;\r\n    const date = new Date();\r\n    const createdOn = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\r\n    const owner = userData.loggedUser.id;\r\n    const { firstName } = userData.loggedUser;\r\n    const { lastName } = userData.loggedUser;\r\n    const { email } = userData.loggedUser;\r\n    const balance = 0.00;\r\n    const status = 'active';\r\n\r\n    // assign data\r\n    accountData.id = newId;\r\n    accountData.firstName = firstName;\r\n    accountData.lastName = lastName;\r\n    accountData.email = email;\r\n    accountData.accountNumber = accountNumberGenerator;\r\n    accountData.createdOn = createdOn;\r\n    accountData.owner = owner;\r\n    accountData.status = status;\r\n    accountData.balance = balance;\r\n    accounts.push(accountData);\r\n    return accountData;\r\n  },\r\n  patchAccount(accountNumber, accountUpdate) {\r\n    let account;\r\n    // eslint-disable-next-line no-plusplus\r\n    for (let i = 0; i <= accounts.length - 1; i++) {\r\n      // eslint-disable-next-line eqeqeq\r\n      if (accounts[i].accountNumber == accountNumber) {\r\n        accounts[i].status = accountUpdate.status;\r\n        account = accounts[i];\r\n      }\r\n    }\r\n    return account;\r\n  },\r\n  deleteAccount(accountNumber) {\r\n    let account;\r\n    // eslint-disable-next-line no-plusplus\r\n    for (let i = 0; i <= accounts.length - 1; i++) {\r\n      // eslint-disable-next-line eqeqeq\r\n      if (accounts[i].accountNumber == accountNumber) {\r\n        accounts.splice(i, 1);\r\n        account = 'account deleted';\r\n      } else {\r\n        account = 'no account found or account has been deleted';\r\n      }\r\n    }\r\n    return account;\r\n  },\r\n};\r\n\r\nexport default CreateAccountService;\r\n"],"file":"createAccount.js"}